name: "Compare S3 objects to local directory action"
description: "Compare a remote path from S3 to a local GitHub repo path"
inputs:
  access_key_id:
    description: "S3 or compatible access key ID"
    required: true
    default: ""
  bucket_name:
    description: "Bucket name"
    required: true
    default: ""
  bucket_endpoint:
    description: "The S3 or compatible endpoint to connect to"
    required: true
    default: ""
  bucket_path:
    description: "The path in the bucket that will be compared to local"
    required: true
    default: ""
  local_path:
    description: "The local path to compare with bucket path"
    required: true
    default: ""
  max_keys:
    description: "boto3 maxKeys setting (int) - increase or decrease at will"
    required: false
    default: 50
  region:
    description: "The S3 bucket region"
    required: true
    default: ""
  secret_access_key:
    description: "The secret access key used to authenticate to the bucket"
    required: true
    default: ""
outputs:
  file-difference:
    description: "Will show files that are present on the remote, but absent locally"
    value: ${{ steps.comparison.outputs.difference }}
runs:
  using: "composite"
  steps:
    - name: setup python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: install requirements
      shell: bash
      run: |
        pip install boto3
    - name: run script
      id: comparison
      shell: bash
      run: |
        curl -O https://raw.githubusercontent.com/aorfanos/s3-compare-action/main/s3-compare-action.py
        python s3-compare-action.py
        rm s3-compare-action.py
      env:
        INPUT_ACCESS_KEY_ID: ${{ inputs.access_key_id }}
        INPUT_BUCKET_NAME: ${{ inputs.bucket_name }}
        INPUT_BUCKET_ENDPOINT: ${{ inputs.bucket_endpoint }}
        INPUT_BUCKET_PATH: ${{ inputs.bucket_path }}
        INPUT_LOCAL_PATH: ${{ inputs.local_path }}
        INPUT_MAX_KEYS: ${{ inputs.max_keys }}
        INPUT_REGION: ${{ inputs.region }}
        INPUT_SECRET_ACCESS_KEY: ${{ inputs.secret_access_key }}
